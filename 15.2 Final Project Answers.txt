---------------------------------------------------
-- SQL CREATE statements used to create the required tables
---------------------------------------------------
CREATE TABLE Claim ( 
	Claim_Date date, 
	Patient_ID int, 
	Provider_ID int, 
	Fee_Charged decimal(8, 2), 
	Coverage decimal(8, 2), 
	Balance decimal(8, 2),
	PRIMARY KEY (Patient_ID, Provider_ID)
);

CREATE TABLE Patient (
	Patient_ID int PRIMARY KEY, 
	Patient_Name varchar(100), 
	Street_Address varchar(100), 
	Address_2 varchar(100), 
	City varchar(100), 
	State char(2), 
	ZIP_Code varchar(5)
);

CREATE TABLE Provider (
	Provider_ID int PRIMARY KEY, 
	Provider_Name varchar(100), 
	Association_ID int
);

CREATE TABLE Provider_Association (
	Association_ID int PRIMARY KEY, 
	Association_Name varchar(100)
);

---------------------------------------------------
-- SQL INSERT statements used to populate the required tables
---------------------------------------------------
DELETE FROM Provider_Association;
INSERT INTO Provider_Association VALUES (101, 'Central City Dentistry');
INSERT INTO Provider_Association (Association_ID, Association_Name) VALUES (102, 'Good Smile Dental Office');

DELETE FROM Provider;
INSERT INTO Provider VALUES (1, 'Maria', 101);
INSERT INTO Provider (Provider_ID, Provider_Name, Association_ID) VALUES (2, 'Rachel', 102);
INSERT INTO Provider VALUES (3, 'Bill', NULL);

INSERT INTO Claim VALUES ('01-OCT-2019', 99001, 1, 120, 119,   1);
INSERT INTO Claim VALUES ('01-OCT-2019', 99001, 2,  20,  11,   9);
INSERT INTO Claim VALUES ('01-OCT-2019', 99001, 3, 620, 519, 101);
INSERT INTO Claim VALUES ('01-OCT-2019', 99002, 1, 150, 120,  30);

INSERT INTO Patient VALUES (99001, 'Jimmy', '123 Main St', '', 'New York', 'NY', 10001);
INSERT INTO Patient VALUES (99002, 'Jose', '8888 Broadway', '', 'New York', 'NY', 10032);

---------------------------------------------------
-- Questions:
---------------------------------------------------
---------------------------------------------------
--  1. Get a list of all providers (ID only) in Claim table. Each date only showing once.
---------------------------------------------------

SELECT DISTINCT Provider_ID from Claim;

---------------------------------------------------
--  2. Check how many claims the Claim table contains.
---------------------------------------------------

SELECT COUNT(*) FROM Claim;

---------------------------------------------------
--  3. Find out the highest coverage of patients for each provider
---------------------------------------------------

SELECT Provider_ID, MAX(Coverage)
FROM Claim
GROUP BY Provider_ID;

---------------------------------------------------
--  4. For each provider, find out the unique patient count (a patient may have multiple claims with the same provider in different dates). The result column should be called 'Unique_Count'.
---------------------------------------------------

SELECT Provider_ID, COUNT(DISTINCT Patient_ID)
FROM Claim
GROUP BY Provider_ID;


---------------------------------------------------
--  5. For each provider, find out the patient count in history. The result column should be called 'Historical_Count'.
---------------------------------------------------

SELECT Provider_ID, COUNT(Patient_ID)
FROM Claim
GROUP BY Provider_ID;

---------------------------------------------------
--  6. For each patient with total Fee Charged < 200, find the total balance in history.
---------------------------------------------------

SELECT Patient_ID, SUM(Balance)
FROM Claim
GROUP BY Patient_ID
HAVING SUM(Fee_Charged) < 200;

---------------------------------------------------
--  7. List all provider association names with a count of their provider.
---------------------------------------------------

SELECT pa.Association_Name, COUNT(p.Provider_Name) 
FROM Provider p
JOIN Provider_Association pa
  ON p.Association_ID = pa.Association_ID
GROUP BY pa.Association_Name;

---------------------------------------------------
--  8. Find out the provider associations in which claim count is more than 1, sorted by registration count, highest first.
---------------------------------------------------

SELECT pa.Association_Name, COUNT(*)
FROM Claim c
JOIN Provider p
  ON c.Provider_ID = p.Provider_ID
JOIN Provider_Association pa
  ON p.Association_ID = pa.Association_ID
GROUP BY pa.Association_Name
HAVING COUNT(*) > 1
ORDER BY COUNT(*) DESC;

---------------------------------------------------
--  9. List all patient names and each patient's total balance, for provider associations' names starting with 'C'
---------------------------------------------------

SELECT pt.Patient_Name, SUM(Balance)
FROM Claim c
JOIN Provider p
  ON c.Provider_ID = p.Provider_ID
JOIN Provider_Association pa
  ON p.Association_ID = pa.Association_ID
JOIN Patient pt
  on c.Patient_ID = pt.Patient_ID
WHERE pa.Association_Name LIKE 'C%'
GROUP BY pt.Patient_Name;

---------------------------------------------------
-- 10. List all patient names and each patient's total balance for patients with balance more than $10
---------------------------------------------------

SELECT pt.Patient_Name, SUM(Balance)
FROM Claim c
JOIN Provider p
  ON c.Provider_ID = p.Provider_ID
JOIN Provider_Association pa
  ON p.Association_ID = pa.Association_ID
JOIN Patient pt
  on c.Patient_ID = pt.Patient_ID
GROUP BY pt.Patient_Name
HAVING SUM(Balance) > 10;

---------------------------------------------------
-- 11. List all providers' names with their provider association names. If the provider association's name does not exist in provider association table, show NULL for the name.
---------------------------------------------------

SELECT p.Provider_Name, pa.Association_Name
FROM Provider p
LEFT JOIN Provider_Association pa
  ON p.Association_ID = pa.Association_ID;

---------------------------------------------------
-- 12. Redo Question #11 using a different approach.
---------------------------------------------------

SELECT p.Provider_Name, pa.Association_Name
FROM Provider_Association pa
RIGHT JOIN Provider p
  ON p.Association_ID = pa.Association_ID;

---------------------------------------------------
-- 13. List all provider names, if the provider association's name starts with 'C'.
---------------------------------------------------

SELECT p.Provider_Name 
FROM Provider p
JOIN Provider_Association pa
  ON p.Association_ID = pa.Association_ID
WHERE pa.Association_Name LIKE 'C%';

---------------------------------------------------
-- 14. Redo Question #13 using a different approach.
---------------------------------------------------

SELECT p.Provider_Name 
FROM Provider p
WHERE p.Association_ID IN (
    SELECT pa.Association_ID
    FROM Provider_Association pa
    WHERE pa.Association_Name LIKE 'C%'
);

---------------------------------------------------
-- 15. Redo Question #14 using a different approach.
---------------------------------------------------

SELECT p.Provider_Name 
FROM Provider p
WHERE EXISTS (
    SELECT *
    FROM Provider_Association pa
    WHERE pa.Association_Name LIKE 'C%'
    AND p.Association_ID = pa.Association_ID
);

---------------------------------------------------
-- 16. Create a view High_Balance_Patients based on the result of Question #10
---------------------------------------------------

create view High_Balance_Patients as 
SELECT pt.Patient_Name, SUM(Balance)
FROM Claim c
JOIN Provider p
  ON c.Provider_ID = p.Provider_ID
JOIN Provider_Association pa
  ON p.Association_ID = pa.Association_ID
JOIN Patient pt
  on c.Patient_ID = pt.Patient_ID
GROUP BY pt.Patient_Name
HAVING SUM(Balance) > 10;

---------------------------------------------------
-- 17. Find patients with a claim from Provider 1, but no claims with Provider 2 
---------------------------------------------------

SELECT Patient_ID FROM Claim WHERE Provider_ID = 1
MINUS
SELECT Patient_ID FROM Claim WHERE Provider_ID = 2;

---------------------------------------------------
-- 18. Redo Question #17 using a different approach 
---------------------------------------------------

SELECT Patient_ID FROM Patient 
WHERE 
    Patient_ID IN (SELECT Patient_ID FROM Claim WHERE Provider_ID = 1)
AND NOT 
    Patient_ID IN (SELECT Patient_ID FROM Claim WHERE Provider_ID = 2);

---------------------------------------------------
-- 19. Rank provider for each patient based on their balance, highest first
---------------------------------------------------

SELECT 
    Patient_ID, 
    Provider_ID, 
    RANK() OVER (
        PARTITION BY Patient_ID
        ORDER BY Balance DESC
    ) AS Provider_Rank 
FROM Claim
ORDER BY Patient_ID, Provider_Rank;

---------------------------------------------------
-- 20. Use a stored procedure to provide an 10% decrease to all the balances
---------------------------------------------------

SELECT * FROM Claim;

--DROP PROCEDURE Update_Claim;
CREATE PROCEDURE Update_Claim (
    V_Percent IN DECIMAL
)
AS
BEGIN
    UPDATE Claim
    SET Balance = Balance * V_Percent;
END;

begin
    Update_Claim(0.9);
end;

SELECT * FROM Claim;
